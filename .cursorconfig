{
  "version": "1.0",
  "design_guidelines": {
    "code_preservation": {
      "critical_rules": [
        "NEVER delete working functionality to implement new features",
        "NEVER remove existing code unless explicitly requested",
        "NEVER replace working implementations with placeholder code",
        "NEVER comment out or disable existing features",
        "ADD new functionality alongside existing code, don't replace it"
      ],
      "forbidden_patterns": [
        "Deleting API routes or endpoints",
        "Removing event handlers or onClick functions", 
        "Commenting out working functionality",
        "Replacing implementations with TODO comments",
        "Removing state management or data flow logic",
        "Deleting UI components that are currently working"
      ]
    },
    "implementation_approach": {
      "required": [
        "Always build incrementally - add to existing code",
        "Preserve all working functionality while adding new features",
        "If code needs refactoring, do it without breaking existing features",
        "Test that existing functionality still works after changes",
        "When in doubt, add new code rather than modifying existing code"
      ]
    },
    "styling_constraints": {
      "strict_rules": [
        "NEVER modify existing CSS/styling unless explicitly requested",
        "Only add styling that is directly necessary for new functionality",
        "Preserve all existing color schemes, spacing, and visual hierarchy",
        "Do not refactor or 'improve' existing styles without explicit instruction",
        "When adding new components, match existing design patterns exactly"
      ]
    }
  },
  "rules": {
    "code_safety": {
      "preservation": {
        "rule": "CRITICAL: Never delete, comment out, or disable working functionality. Always add new features alongside existing code.",
        "severity": "error"
      },
      "incremental_development": {
        "rule": "Build features incrementally. If existing code works, keep it working while adding new functionality.",
        "severity": "error"
      }
    },
    "debugging": {
      "approach": {
        "rule": "When fixing bugs, identify the minimal change needed. Don't rewrite working code.",
        "severity": "warning"
      }
    }
  }
}